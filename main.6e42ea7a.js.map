{"version":3,"sources":["scripts/main.js"],"names":["body","document","querySelector","tableHeader","tbody","form","createElement","minAge","maxAge","minLength","ERROR","className","insertAdjacentHTML","append","check","sortTable","colNum","attribute","directSorting","rowsArray","children","sort","rowA","rowB","stringA","cells","innerHTML","stringB","localeCompare","num1","toNumber","reverse","addEventListener","target","isCurrentIndex","cellIndex","string","includes","slice","split","join","e","forEach","row","classList","remove","parentElement","add","pushNotification","title","description","type","notification","dataset","qa","setTimeout","errorText","text","successText","isLetter","ch","toLowerCase","toUpperCase","validateString","value","additionalCondition","length","preventDefault","validName","position","validPosition","name","age","newRow","salary","toLocaleString","formName","formPosition","office","reset","targetCell","closest","input","style","width","getComputedStyle","textContent","firstChild","removeChild","appendChild","focus","select","options","i","createTextNode","blurText","isNaN","evnt","key","blur"],"mappings":"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","file":"main.6e42ea7a.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst body = document.querySelector('body');\nconst tableHeader = document.querySelector('thead');\nconst tbody = document.querySelector('tbody');\nconst form = document.createElement('form');\n\nconst minAge = 18;\nconst maxAge = 90;\nconst minLength = 4;\nconst ERROR = 'It sould be at least 4 letters and must not include numbers';\n\nform.className = 'new-employee-form';\n\nform.insertAdjacentHTML('afterbegin',\n  `\n  <label>Name:\n    <input\n      name=\"name\"\n      type=\"text\"\n      data-qa=\"name\"\n      required\n    >\n  </label>\n  <label>Position:\n    <input\n      name=\"position\"\n      type=\"text\"\n      data-qa=\"position\"\n      required\n    >\n  </label>\n  <label>Office:\n    <select\n      name=\"office\"\n      type=\"text\"\n      data-qa=\"office\"\n    >\n      <option value=\"Tokyo\">Tokyo</option>\n      <option value=\"Singapore\">Singapore</option>\n      <option value=\"London\">London</option>\n      <option value=\"New York\">New York</option>\n      <option value=\"Edinburgh\">Edinburgh</option>\n      <option value=\"San Francisco\">San Francisco</option>\n    </select>\n  </label>\n  <label>Age:\n    <input\n      name=\"age\"\n      type=\"number\"\n      data-qa=\"age\"\n      required\n    >\n  </label>\n  <label>Salary:\n    <input\n      name=\"salary\"\n      type=\"number\"\n      data-qa=\"salary\"\n      required\n    >\n  </label>\n  <button type=\"submit\">Save to table</button>\n  `\n);\n\nbody.append(form);\n\nlet check = false;\n\ntableHeader.addEventListener('click', ({ target }) => {\n  const isCurrentIndex = check === target.cellIndex;\n\n  sortTable(target.cellIndex, target.innerHTML, isCurrentIndex);\n\n  check = isCurrentIndex ? false : target.cellIndex;\n});\n\nfunction sortTable(colNum, attribute, directSorting) {\n  const rowsArray = [...tbody.children];\n\n  switch (attribute) {\n    case 'Position':\n    case 'Name':\n    case 'Office':\n      rowsArray.sort((rowA, rowB) => {\n        const stringA = rowA.cells[colNum].innerHTML;\n        const stringB = rowB.cells[colNum].innerHTML;\n\n        return stringA.localeCompare(stringB);\n      });\n      break;\n\n    default:\n      rowsArray.sort((rowA, rowB) => {\n        const num1 = toNumber(rowA.cells[colNum].innerHTML);\n        const num2 = toNumber(rowB.cells[colNum].innerHTML);\n\n        return num1 - num2;\n      });\n  }\n\n  if (directSorting) {\n    tbody.append(...rowsArray.reverse());\n  }\n\n  tbody.append(...rowsArray);\n}\n\nconst toNumber = function(string) {\n  const result = string.includes('$')\n    ? string.slice(1).split(',').join('')\n    : string;\n\n  return +result;\n};\n\ntbody.addEventListener('click', (e) => {\n  [...tbody.children].forEach(row => {\n    row.classList.remove('active');\n  });\n\n  e.target.parentElement.classList.add('active');\n});\n\nconst pushNotification = (title, description, type) => {\n  const notification = document.createElement('div');\n\n  notification.classList.add('notification', type);\n  notification.dataset.qa = 'notification';\n\n  notification.innerHTML = `\n    <h2 class=\"title\">${title}</h2>\n    <p>${description}</p>\n  `;\n\n  body.append(notification);\n\n  setTimeout(() => notification.remove(), 2000);\n};\n\nconst errorText = (text) => {\n  pushNotification(\n    'Error!',\n    `${text}`,\n    'error'\n  );\n};\n\nconst successText = (text) => {\n  pushNotification(\n    'Success!',\n    `${text}`,\n    'success'\n  );\n};\n\nconst isLetter = ch => ch.toLowerCase() === ch.toUpperCase();\n\nconst validateString = (\n  value,\n  additionalCondition = value.length < minLength\n) => {\n  if (additionalCondition) {\n    errorText(ERROR);\n\n    return false;\n  }\n\n  for (const ch of value) {\n    if (isLetter(ch)) {\n      errorText(ERROR);\n\n      return false;\n    }\n  }\n\n  return true;\n};\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const validName = validateString(form.position.value);\n  const validPosition = validateString(form.name.value);\n\n  if (!validName || !validPosition) {\n    return;\n  }\n\n  if (form.age.value < minAge || form.age.value > maxAge) {\n    errorText('Enter valid age');\n\n    return;\n  }\n\n  const newRow = document.createElement('tr');\n  const salary = (+form.salary.value).toLocaleString('en');\n  const formName = form.name.value[0].toUpperCase() + form.name.value.slice(1);\n  const formPosition\n    = form.position.value[0].toUpperCase() + form.position.value.slice(1);\n\n  newRow.innerHTML = `\n    <td>${formName}</td>\n    <td>${formPosition}</td>\n    <td>${form.office.value}</td>\n    <td>${form.age.value}</td>\n    <td>$${salary}</td>\n  `;\n\n  tbody.append(newRow);\n  form.reset();\n\n  successText('The employee has been added to the table!');\n});\n\ntbody.addEventListener('dblclick', (e) => {\n  const targetCell = e.target.closest('td');\n  const input = document.createElement('input');\n\n  input.classList.add('cell-input');\n  input.style.width = getComputedStyle(e.target).width;\n  input.value = targetCell.textContent;\n\n  const value = input.value;\n\n  input.value = '';\n\n  while (targetCell.firstChild) {\n    targetCell.removeChild(targetCell.firstChild);\n  }\n\n  targetCell.appendChild(input);\n  input.focus();\n\n  if (targetCell.cellIndex === 2) {\n    targetCell.removeChild(input);\n\n    const select = document.createElement('select');\n\n    select.classList.add('cell-input');\n\n    select.insertAdjacentHTML('afterbegin', `\n      <option value=\"${value}\">${value}</option>\n      <option value=\"Tokyo\">Tokyo</option>\n      <option value=\"Singapore\">Singapore</option>\n      <option value=\"London\">London</option>\n      <option value=\"New York\">New York</option>\n      <option value=\"Edinburgh\">Edinburgh</option>\n      <option value=\"San Francisco\">San Francisco</option>\n    `);\n\n    const options = [...select.children];\n\n    for (let i = 1; i < options.length; i++) {\n      if (options[i].value === options[0].value) {\n        options[i].dataset.qa = 'forRemove';\n      }\n    }\n\n    select.removeChild(select.querySelector(`[data-qa=\"forRemove\"]`));\n    targetCell.appendChild(select);\n    select.focus();\n\n    select.addEventListener('blur', () => {\n      targetCell.removeChild(select);\n\n      targetCell.appendChild(document.createTextNode(select.value));\n    });\n  }\n\n  input.addEventListener('blur', () => {\n    targetCell.removeChild(input);\n\n    const blurText = 'You have successfully changed the contents of the cell!';\n\n    switch (targetCell.cellIndex) {\n      case 0:\n      case 1:\n        for (const ch of input.value) {\n          if (isLetter(ch) || input.value.length < 4) {\n            errorText(ERROR);\n\n            input.value = '';\n          } else {\n            input.value = input.value[0].toUpperCase() + input.value.slice(1);\n\n            successText(blurText);\n          }\n        }\n        break;\n\n      case 3:\n        input.type = 'number';\n\n        if (input.value < 18 || input.value > 90) {\n          errorText('Enter valid age');\n          input.value = '';\n        } else {\n          successText(blurText);\n        }\n        break;\n\n      case 4:\n        if (input.value <= 0 || isNaN(input.value)) {\n          errorText('Enter valid salary');\n\n          input.value = '';\n        } else {\n          input.value = `$${(+input.value).toLocaleString('en')}`;\n\n          successText(blurText);\n        }\n    }\n\n    if (!input.value) {\n      input.value = value;\n    }\n\n    targetCell.appendChild(document.createTextNode(input.value));\n  });\n\n  input.addEventListener('keyup', (evnt) => {\n    if (evnt.key === 'Enter') {\n      input.blur();\n    }\n  });\n});\n"]}